#include <stdint.h>

#define GPIOB_BASE       (0x50000400UL)
#define RCC_BASE         (0x40021000UL)

#define RCC_IOPENR_OFFSET (0x34UL)
#define RCC_IOPENR (*(volatile uint32_t*)(RCC_BASE + RCC_IOPENR_OFFSET))

#define GPIOB_MODER_OFFSET (0x00UL)
#define GPIOB_MODER (*(volatile uint32_t*)(GPIOB_BASE + GPIOB_MODER_OFFSET))

#define GPIOB_ODR_OFFSET (0x14UL)
#define GPIOB_ODR (*(volatile uint32_t*)(GPIOB_BASE + GPIOB_ODR_OFFSET))

void delay(volatile uint32_t time)
{
    while(time--) {
        for (volatile uint32_t i = 0; i < 1000; i++);
    }
}

void dot() {
    GPIOB_ODR |= (1 << 3);   
    delay(400);
    GPIOB_ODR &= ~(1 << 3); 
    delay(400);
}

void dash() {
    GPIOB_ODR |= (1 << 3);  
    delay(1200);
    GPIOB_ODR &= ~(1 << 3);
    delay(400);
}

int main(void) {
    RCC_IOPENR |= (1 << 1);     

    // Set PB3 as output
    GPIOB_MODER &= ~(0x3 << (3 * 2)); 
    GPIOB_MODER |= (0x1 << (3 * 2)); 

    while (1) {
        // S : dot dot dot
        dot(); dot(); dot();

        // O : dash dash dash
        dash(); dash(); dash();

        // S : dot dot dot
        dot(); dot(); dot();

        delay(2000);
    }

    return 0;
}
