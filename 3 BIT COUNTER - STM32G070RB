#include <stdint.h>

#define GPIOC_BASE       (0x50000800UL)
#define RCC_BASE         (0x40021000UL)

#define RCC_IOPENR_OFFSET (0x34UL)
#define RCC_IOPENR (*(volatile uint32_t*)(RCC_BASE + RCC_IOPENR_OFFSET))

#define GPIOC_MODER_OFFSET (0x00UL)
#define GPIOC_MODER (*(volatile uint32_t*)(GPIOC_BASE + GPIOC_MODER_OFFSET))

#define GPIOC_ODR_OFFSET (0x14UL)
#define GPIOC_ODR (*(volatile uint32_t*)(GPIOC_BASE + GPIOC_ODR_OFFSET))

void delay(volatile uint32_t time)
{
    while(time--) {
        for (volatile uint32_t i = 0; i < 1000; i++);
    }
}

int main(void) {
    RCC_IOPENR |= (1 << 2); // Enable GPIOC clock

    // Set PC4, PC5, PC6 as output
    GPIOC_MODER &= ~(0x3 << (4 * 2)); // Clear PC4
    GPIOC_MODER |=  (0x1 << (4 * 2)); // Output PC4

    GPIOC_MODER &= ~(0x3 << (5 * 2)); // Clear PC5
    GPIOC_MODER |=  (0x1 << (5 * 2)); // Output PC5

    GPIOC_MODER &= ~(0x3 << (6 * 2)); // Clear PC6
    GPIOC_MODER |=  (0x1 << (6 * 2)); // Output PC6

    while (1) {
        for (uint8_t i = 0; i < 8; i++) {
            GPIOC_ODR &= ~(0x7 << 4); // Clear PC4-PC6
            GPIOC_ODR |= (i << 4);    // Set counter value
            delay(1000);              // ~1 second delay
        }
    }

    return 0;
}
